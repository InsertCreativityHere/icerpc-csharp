#
# Copyright (c) ZeroC, Inc. All rights reserved.
#

# ----------------------------------------------------------------------
# Don't change anything below this line!
# ----------------------------------------------------------------------

#
# Supported configurations
#
supported-configs = shared static

-include        $(lang_srcdir)/config/Make.rules.$(os)
ifeq ($(os),Darwin)
include         $(lang_srcdir)/config/Make.xcodesdk.rules
endif

# Validate platforms and configs
$(eval $(call validate-config))

#
# Define which projects to build for the different configurations.
#
coreandstub_components  = IceUtil \
                          Ice \
                          IceSSL \
                          IceDiscovery \
                          IceLocatorDiscovery \
                          Glacier2 \
                          IceStorm \
                          IceGrid \
                          IceBox

# Add the Bluetooth transport if Bluetooth system libraries are available
ifneq ($(IceBT_system_libs),)
coreandstub_components  += IceBT
endif

#
# Build all the projects with the shared configuration, except IceUtil and Slice
# that are static-only
#
shared_projects         = %
shared_excludes         = IceUtil Slice

#
# Build only few components with the static configuration (core and stubs)
#
static_components       = $(coreandstub_components)

#
# Components and projects
#
cpp_projects          = %

#
# If building on a Linux multilib platform, we restrict what we build for
# the 32-bits architecture.
#
ifeq ($(multilib-platform),yes)
x86_components          = $(coreandstub_components) IceDB IceStormService icebox
endif

#
# $(call make-cpp-src-project,$1=project)
#
define make-cpp-src-project
ifeq ($(filter all cpp,$(ICE_BIN_DIST)),)
$1_slicecompiler        := slice2cpp
$1_sliceflags           += -I$(slicedir)
$1_cppflags             += -Isrc -I$1/generated -I$(includedir) -I$(includedir)/generated -DICE_BUILDING_SRC
$(make-project)
srcs:: $1
endif
endef

#
# Create top-level include/config dir
#
$(DESTDIR)$(install_includedir) $(DESTDIR)$(install_configdir):
	$(Q)$(MKDIR) $@
