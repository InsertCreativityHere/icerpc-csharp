// Copyright (c) ZeroC, Inc. All rights reserved.

module IceRpc::Tests::Slice;

exception CompressMyException
{
    bytes: sequence<uint8>,
}

interface CompressTest
{
    [compress(Args)] opCompressArgs(size: int32, p1: sequence<uint8>);
    [compress(Return)] opCompressReturn(size: int32) -> sequence<uint8>;
    [compress(Args, Return)] opCompressArgsAndReturn(p1: sequence<uint8>) -> sequence<uint8>;
    [compress(Args, Return)] opWithUserException(size: int32);

    [compress(Args)] opCompressStreamArg(p1: stream uint8) -> int32;
    [compress(Return)] opCompressReturnStream(size: int32) -> stream uint8;
    [compress(Args, Return)] opCompressStreamArgAndReturnStream(p1: stream uint8) -> stream uint8;
}
